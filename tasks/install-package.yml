---
- name: Get {{ item.name }} latest version
  block:
    - name: Get latest version json
      uri:
        url: "{{ item.version_lookup_url }}"
        return_content: yes
        status_code: 200
      register: version_lookup_response

    - name: Process latest version json
      set_fact:
        latest_version: >-
          {{ lookup('vars', '{{ item.name }}_version_processor') }}
  when: item.version | lower == 'latest'

- name: Form {{ item.name }} version
  set_fact:
    resolved_version: >-
      {{ (item.version | lower == 'latest') | ternary(latest_version, item.version) }}

- name: Debug {{ item.name }} version
  debug:
    msg: "Version of {{ item.name }} to install: {{ resolved_version }}"

- name: Create temporary download directory
  tempfile:
    state: directory
    suffix: "{{ item.name }}"
  register: download_directory

- name: Download {{ item.name }} package
  get_url:
    url: "{{ lookup('vars', '{{ item.name }}_package_url') }}"
    dest: "{{ download_directory.path }}"
  register: download_path

- name: Copy {{ item.name }} package to destination directory
  become: true
  copy:
    src: "{{ download_path.dest }}"
    dest: "{{ item.install_path }}"
    owner: root
    group: root
    mode: 0755
    remote_src: yes
